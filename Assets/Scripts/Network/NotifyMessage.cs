//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: NotifyMessage.proto
namespace com.gateserver
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"NotifyClientClanChat")]
  public partial class NotifyClientClanChat : global::ProtoBuf.IExtensible
  {
    public NotifyClientClanChat() {}
    
    private string _content;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"content", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string content
    {
      get { return _content; }
      set { _content = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"NotifyClientContent")]
  public partial class NotifyClientContent : global::ProtoBuf.IExtensible
  {
    public NotifyClientContent() {}
    
    private com.gateserver.NotifyClientClanChat _clanChat = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"clanChat", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public com.gateserver.NotifyClientClanChat clanChat
    {
      get { return _clanChat; }
      set { _clanChat = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}